package io.github.codetoil.litlaunch.api.library_api;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : /workspaces/LitLaunch/litlaunch-library-api/src/main/c/litlaunch-library-api.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("litlaunch-library-api") 
public class Component extends StructObject {
	static {
		BridJ.register();
	}
	@Field(0) 
	public int size() {
		return this.io.getIntField(this, 0);
	}
	@Field(0) 
	public Component size(int size) {
		this.io.setIntField(this, 0, size);
		return this;
	}
	@Field(1) 
	public int nameLength() {
		return this.io.getIntField(this, 1);
	}
	@Field(1) 
	public Component nameLength(int nameLength) {
		this.io.setIntField(this, 1, nameLength);
		return this;
	}
	/** C type : ILibrary* */
	@Field(2) 
	public Pointer<LitlaunchLibrary > componentLibrary() {
		return this.io.getPointerField(this, 2);
	}
	/** C type : ILibrary* */
	@Field(2) 
	public Component componentLibrary(Pointer<LitlaunchLibrary > componentLibrary) {
		this.io.setPointerField(this, 2, componentLibrary);
		return this;
	}
	/** C type : char[0] */
	@Array({0}) 
	@Field(3) 
	public Pointer<Byte > blob() {
		return this.io.getPointerField(this, 3);
	}
	public Component(String name, LitlaunchLibrary library) {
		this(LitlaunchLibraryApiLibrary.createComponentStruct(
			Pointer.pointerToCString(name),
			library));
	}
	public Component(Pointer pointer) {
		super(pointer);
	}
}
